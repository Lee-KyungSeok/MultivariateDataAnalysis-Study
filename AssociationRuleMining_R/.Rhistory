# 인스톨 시킨 패키지를 실행시키는 명령어
library(arules)
# Association Rules -------------------------------------------------------
# arules and arulesViz packages install
# 의존성이 있는 경우가 있는 경우 한꺼번에 다 설치한다는 의미
install.packages("arules", dependencies = TRUE) # 연관규칙 분석 패키지
setwd("C:/Users/Kyung/Desktop/수업/학교 수업/4-2 학기/다변량분석/05 Association Rule Mining")
# Load titanic data set
# delimeter 로 된 파일을 읽어오겠다, "," 로 구분하겠다....(이 파일에는 존재하지 않는다.)
titanic <- read.delim("titanic.txt", dec=",")
str(titanic)
head(titanic) #
head(titanic) # 데이터를 보여준다.
# Remove "Name" column and group "Age" column (이름은 생존여부와 관련 없으므로 삭제)
titanic_ar <- titanic[,2:5] # 처음은 모두, 두번째는 2~5 줄을 가져온다.
titanic_ar$Age = as.character(titanic_ar$Age)
# Remove "Name" column and group "Age" column (이름은 생존여부와 관련 없으므로 삭제)
titanic_ar <- titanic[,2:5] # 처음은 모두, 두번째는 2~5 줄을 가져온다.
# Remove "Name" column and group "Age" column (이름은 생존여부와 관련 없으므로 삭제)
titanic_ar <- titanic[,2:5] # 처음은 모두, 두번째는 2~5 줄을 가져온다.
head(titanic) # 데이터를 보여준다.
str(titanic) # 해당하는 데이터의 스트럭쳐를 알려달라 하는 명령어
head(titanic) # 데이터를 보여준다.
# Remove "Name" column and group "Age" column (이름은 생존여부와 관련 없으므로 삭제)
titanic_ar <- titanic[,2:5] # 처음은 모두, 두번째는 2~5 줄을 가져온다.
c_inx[1:10]
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(titanic_ar$Age < 20)
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(titanic_ar$Age < 20)
# Remove "Name" column and group "Age" column (이름은 생존여부와 관련 없으므로 삭제)
titanic_ar <- titanic[,2:5] # 처음은 모두, 두번째는 2~5 줄을 가져온다.
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(titanic_ar$Age < 20)
# Association Rules -------------------------------------------------------
# arules and arulesViz packages install
# 의존성이 있는 경우가 있는 경우 한꺼번에 다 설치한다는 의미
install.packages("arules", dependencies = TRUE) # 연관규칙 분석 패키지
install.packages("arules", dependencies = TRUE)
install.packages("arulesViz", dependencies = TRUE) # 시각화를 도와주는 패키지
install.packages("wordcloud", dependencies = TRUE) # 그리는 것을 도와주는 패키ㅣ
# 인스톨 시킨 패키지를 실행시키는 명령어
library(arules)
library(arulesViz)
library(wordcloud)
# Load titanic data set
# delimeter 로 된 파일을 읽어오겠다, "," 로 구분하겠다....(이 파일에는 존재하지 않는다.)
titanic <- read.delim("titanic.txt", dec=",")
str(titanic) # 해당하는 데이터의 스트럭쳐를 알려달라 하는 명령어
head(titanic) # 데이터를 보여준다.
# Remove "Name" column and group "Age" column (이름은 생존여부와 관련 없으므로 삭제)
titanic_ar <- titanic[,2:5] # 처음은 모두, 두번째는 2~5 줄을 가져온다.
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(titanic_ar$Age < 20)
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(asnumeric(titanic_ar$Age < 20))
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(asnumeric(titanic_ar$Age < 20))
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(as.numeric(titanic_ar$Age < 20))
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(titanic_ar$Age < 20)
a_idx <- which(titanic_ar$Age >= 20)
na_idx <- which(is.na(titanic_ar$Age))
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(titanic_ar$Age < 20)
a_idx <- which(titanic_ar$Age >= 20)
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(as.numeric(titanic_ar$Age) < 20)
a_idx <- which(as.numeric(titanic_ar$Age) >= 20)
# c_idx <- which(titanic_ar$Age < 20)
# a_idx <- which(titanic_ar$Age >= 20)
na_idx <- which(is.na(titanic_ar$Age))
titanic_ar$Age[c_idx] <- "Child"
titanic_ar$Age[a_idx] <- "Adult"
titanic_ar$Age[na_idx] <- "Unknown"
# Association Rules -------------------------------------------------------
# arules and arulesViz packages install
# 의존성이 있는 경우가 있는 경우 한꺼번에 다 설치한다는 의미
install.packages("arules", dependencies = TRUE) # 연관규칙 분석 패키지
install.packages("arules", dependencies = TRUE)
install.packages("arulesViz", dependencies = TRUE) # 시각화를 도와주는 패키지
install.packages("wordcloud", dependencies = TRUE) # 그리는 것을 도와주는 패키ㅣ
# 인스톨 시킨 패키지를 실행시키는 명령어
library(arules)
library(arulesViz)
library(wordcloud)
# Load titanic data set
# delimeter 로 된 파일을 읽어오겠다, "," 로 구분하겠다....(이 파일에는 존재하지 않는다.)
titanic <- read.delim("titanic.txt", dec=",")
str(titanic) # 해당하는 데이터의 스트럭쳐를 알려달라 하는 명령어
head(titanic) # 데이터를 보여준다.
# Remove "Name" column and group "Age" column (이름은 생존여부와 관련 없으므로 삭제)
titanic_ar <- titanic[,2:5] # 처음은 모두, 두번째는 2~5 줄을 가져온다.
# 나이를 보고 20살 기준으로 child, adult, unknown 으로 age를 바꾸고자 한다.
# (why> 어린아이들이 더 많이 살아남았다고 가정했기 때문)
## which : titanic_ar 에서 age라는 변수에 대해 20보다 작은 값을 가지고 있는 행들의 번호를 c_idx 에 저장해줘라
c_idx <- which(as.numeric(titanic_ar$Age) < 20)
a_idx <- which(as.numeric(titanic_ar$Age) >= 20)
# c_idx <- which(titanic_ar$Age < 20)
# a_idx <- which(titanic_ar$Age >= 20)
na_idx <- which(is.na(titanic_ar$Age))
titanic_ar$Age[c_idx] <- "Child"
titanic_ar$Age[a_idx] <- "Adult"
titanic_ar$Age[na_idx] <- "Unknown"
# Convert the attribues to factor (모두 요인 형태로 바꾸겠다 하는 것!!)
titanic_ar$Age <- as.factor(titanic_ar$Age)
titanic_ar$Survived <- as.factor(titanic_ar$Survived)
# Rule generation by Apriori algorithm with default settings
rules <- apriori(titanic_ar)
inspect(rules)
# Rule generation by Apriori algorithm with custom settings (미니멈 서포트 값은 디폴트로 설정되어 있다)
# minlen : 최고 합 길이 ex> a,b -> e 가능 / g -> f 불가능
# 결과는 survive 중에 하나만 나타나도록 해라!!
rules <- apriori(titanic_ar, parameter = list(minlen = 3, support = 0.1, conf = 0.8),
appearance = list(rhs = c("Survived=0", "Survived=1"), default="lhs"))
inspect(rules)
clear
# Plot the rules (그림으로 보여준다!!)
plot(rules, method="scatterplot") # 산점도를 보여주며, 이는 내가 가진 데이터를 가지고 연관규칙분석을 했을 때, support confidence 등 전반적인 것을 보여준다.
plot(rules, method="graph", control=list(type = "items", alpha = 1)) #
# Association Rules -------------------------------------------------------
# arules and arulesViz packages install
# 의존성이 있는 경우가 있는 경우 한꺼번에 다 설치한다는 의미
install.packages("arules", dependencies = TRUE) # 연관규칙 분석 패키지
install.packages("arules", dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
# Association Rules -------------------------------------------------------
# arules and arulesViz packages install
# 의존성이 있는 경우가 있는 경우 한꺼번에 다 설치한다는 의미
install.packages("arules") # 연관규칙 분석 패키지
install.packages("arules")
install.packages("arules")
install.packages("wordcloud", dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
